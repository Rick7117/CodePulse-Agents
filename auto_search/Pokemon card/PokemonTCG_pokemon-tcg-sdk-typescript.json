{
    "title": "PokemonTCG_pokemon-tcg-sdk-typescript",
    "link": "https://github.com/PokemonTCG/pokemon-tcg-sdk-typescript",
    "about": "TPok√©mon TCG SDK - Typescript",
    "languages": {
        "TypeScript": 14954
    },
    "content": "# Pokemon TCG SDK TypeScript\n\nThis is the TypeScript SDK for the [Pokemon TCG API](https://pokemontcg.io).\n\n# V2 Announcement\nVersion 1 of this SDK is officially depricated. Version 2 stable release this SDK is scheduled to be released on **Friday, September 17th, 20201**. Version 1 will continue to receive support until then. **See the [migration guide](MIGRATING.md) for steps to update your app to use the latest supported version of the SDK**\n\n## Installation\n\n**npm**\n\n    npm install --save pokemon-tcg-sdk-typescript\n\n**yarn**\n\n    yarn add pokemon-tcg-sdk-typescript\n\nIt is recommended to use an API key for version 2 of the API. By default, requests are limited to 20,000/day. Requests are rate limited to 1000 requests a day, and a maximum of 30 per minute.\n\nTo use the SDK with an API key, create an account at https://dev.pokemontcg.io to grab an API key. Then set your API key to the environment variable POKEMONTCG_API_KEY in a .env file. Make sure to use this exact environment variable, otherwise the SDK will not be able to read the API key.\n\n## Class Definitions\n\n### Card\n\n```typescript\n  id: string;\n  name: string;\n  supertype: string;\n  subtypes: string[];\n  hp?: string;\n  types?: string[];\n  evolesFrom?: string;\n  evolvesTo?: string[];\n  rules?: string[];\n  ancientTrait?: IAncientTrait;\n  abilities?: IAbility[];\n  attacks?: IAttack[];\n  weaknesses?: IWeakness[];\n  resistances?: IResistance[];\n  retreatCost?: string[];\n  convertedRetreatCost?: number;\n  set: ISet;\n  number: string;\n  artist?: string;\n  rarity: string;\n  flavorText?: string;\n  nationalPokedexNumbers?: number[];\n  legalities: ILegality;\n  images: ICardImage;\n  tcgplayer?: ITCGPlayer;\n  cardmarket?: ICardmarket;\n```\n\n### IAbility\n\n```typescript\nname: string;\ntext: string;\ntype: string;\n```\n\n### IAttack\n\n```typescript\ncost: string[];\nname: string;\ntext: string;\ndamage: string;\nconvertedEnergyCost: string;\n```\n\n### IResistance, IWeakness\n\n```typescript\ntype: string;\nvalue: string;\n```\n\n### Set\n\n```typescript\n  id: string;\n  images: ISetImage;\n  legalities: ILegality;\n  name:  string;\n  printedTotal: number;\n  ptcgoCode: string;\n  releaseDate: string;\n  series:  string;\n  total: number;\n  updatedAt: string;\n```\n\n### IQuery\n\n```typescript\n{ name: string, value: string | number }\n```\n\n## Method Definitions\n\n```typescript\nCard.find(id: string): Promise<Card>\nCard.where(params: IQuery[]): Promise<Card[]>\nCard.all(): Promise<Card[]>\n\nSet.find(id: string): Promise<Set>\nSet.where(params: IQuery[]): Promise<Set[]>\nSet.all(): Promise<Set[]>\n\nMeta.allTypes(): Promise<string[]>\nMeta.allSubtypes(): Promise<string[]>\nMeta.allSupertypes(): Promise<string[]>\n```\n\n## Usage\n\nAll of the calls return generic promises like `Promise<T>` or `Promise<T[]>`. The type is determined from the class making the call. The examples here are using the `Card` class but the usage for the other classes are the same.\n\n```typescript\nimport { PokemonTCG } from 'pokemon-tcg-sdk-typescript'\n\nPokemonTCG.Card.find('xy1')\n  .then(card => {\n    // do stuff with the card\n  })\n  .catch(error => {\n    // do something with the error\n  });\n\nlet params: PokemonTCG.IQuery[] = [{ name: 'name', value: 'Charizard' }];\nPokemonTCG.Card.where(params)\n  .then(cards => {\n    // do stuff with the cards\n  })\n  .catch(error => {\n    // do something with the error\n  });\n\nPokemonTCG.Card.all()\n  .then(cards => {\n    // do stuff with the cards\n  })\n  .catch(error => {\n    // do something with the error\n  });\n```\n\n## Contributing\n* Open an issue\n  * Describe what the SDK is missing and what changes you'd like to see implemented\n  * **Ask clarifying questions**\n* Fork it (click the Fork button at the top of the page)\n* Create your feature branch (git checkout -b my-new-feature)\n* Make some changes and fix some bugs!\n* Run the tests `npm run-script test`\n* Test your changes in a project of yours:\n  * Create a link with [npm](https://docs.npmjs.com/cli/link.html) or [yarn](https://yarnpkg.com/lang/en/docs/cli/link/) (depending on what tool you installed this SDK with)\n  * In your project that **uses** the SDK, install the linked package with `yarn/npm link pokemon-tcg-sdk-typescript`\n  * Verify the SDK behaves as expected, and your changes took effect\n* Commit your changes (git commit -am 'Add some feature')\n* Push to the branch (git push origin my-new-feature)\n* Create a new Pull Request to `master`\n\n\n",
    "tokens": 1133,
    "stars": 41,
    "forks": 22,
    "watchers": 5,
    "open_issues": 17
}